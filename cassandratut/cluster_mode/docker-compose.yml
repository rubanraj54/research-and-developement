# Please note we are using Docker Compose version 3
version: '3'
services:
    cassandrarobot1:
        image: cassandra-robot:latest
        command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 0; fi && /docker-entrypoint.sh cassandra -f'
        networks:
            - cassandracluster
        volumes:
            - $HOME/cassandra/data1:/var/lib/cassandra
            - $HOME/Desktop/logs/cassandra/executionlogs1:/var/executionlogs/
            - $PWD/src:/src
        environment:
            - CASSANDRA_CLUSTER_NAME=robot_cluster
            - CASSANDRA_SEEDS=cassandrarobot1
        ports:
          - 19042:9042
        expose:
            - 7000
            - 7001
            - 7199
            - 9042
            - 9160
        ulimits:
            memlock: -1
            nproc: 32768
            nofile: 100000
    cassandrarobot2:
        image: cassandra-robot:latest
        command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 60; fi && /docker-entrypoint.sh cassandra -f'
        networks:
            - cassandracluster
        volumes:
            - $HOME/cassandra/data2:/var/lib/cassandra
            - $HOME/Desktop/logs/cassandra/executionlogs2:/var/executionlogs/
            - $PWD/src:/src
        environment:
            - CASSANDRA_CLUSTER_NAME=robot_cluster
            - CASSANDRA_SEEDS=cassandrarobot1
        depends_on:
              - cassandrarobot1
        ports:
          - 29042:9042
        expose:
            - 7000
            - 7001
            - 7199
            - 9042
            - 9160
        ulimits:
            memlock: -1
            nproc: 32768
            nofile: 100000
    # cassandrarobot3:
    #     image: cassandra-robot:latest
    #     command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 120; fi && /docker-entrypoint.sh cassandra -f'
    #     networks:
    #         - cassandracluster
    #     volumes:
    #         - $HOME/cassandra/data3:/var/lib/cassandra
    #         - $HOME/Desktop/logs/cassandra/executionlogs3:/var/executionlogs/
    #         - $PWD/src:/src
    #     environment:
    #         - CASSANDRA_CLUSTER_NAME= robot_cluster
    #         - CASSANDRA_SEEDS=cassandrarobot1
    #     depends_on:
    #           - cassandrarobot1
    #     ports:
    #       - 39042:9042
    #     expose:
    #         - 7000
    #         - 7001
    #         - 7199
    #         - 9042
    #         - 9160
    #     ulimits:
    #         memlock: -1
    #         nproc: 32768
    #         nofile: 100000
    # A web based interface for managing your docker containers.
    # portainer:
    #     image: portainer/portainer
    #     command: --templates http://templates/templates.json
    #     networks:
    #         - cassandracluster
    #     volumes:
    #         - /var/run/docker.sock:/var/run/docker.sock
    #         - $HOME/cassandra/portainer-data:/data
    #     # Enable you to access potainers web interface from your host machine
    #     # using http://localhost:10001
    #     ports:
    #         - "10001:9000"
networks:
    cassandracluster:
        driver: bridge
